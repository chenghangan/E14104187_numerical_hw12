import numpy as np

# 參數設定
pi = np.pi
h = 0.1 * pi
n = int(pi / h) + 1  # x方向31點 (0~π)
m = int(pi / 2 / h) + 1  # y方向16點 (0~π/2)

# 初始化
u = np.zeros((n, m))
x = np.linspace(0, pi, n)
y = np.linspace(0, pi/2, m)

# 邊界條件
u[0, :] = np.cos(y)          # u(0,y) = cos(y)
u[-1, :] = -np.cos(y)        # u(π,y) = -cos(y)
u[:, 0] = np.cos(x)          # u(x,0) = cos(x)
u[:, -1] = 0                 # u(x,π/2) = 0

# 迭代求解
for _ in range(10000):
    u_old = u.copy()
    for i in range(1, n-1):
        for j in range(1, m-1):
            u[i,j] = 0.25 * (u[i+1,j] + u[i-1,j] + u[i,j+1] + u[i,j-1] - h**2 * x[i] * y[j])
    if np.max(np.abs(u - u_old)) < 1e-6:
        break

# 輸出全部網格點
print("問題1完整解（u[i,j]對應x=0.1π*i, y=0.1π*j）：")
np.set_printoptions(precision=4, suppress=True)
print(u)
